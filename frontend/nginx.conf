# ==========================================
# Nginx Config para Easypanel
# Frontend e Backend são serviços SEPARADOS
# Frontend chama Backend via VITE_API_URL
# ==========================================

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Proxy para uploads do backend (DEVE vir ANTES das outras regras)
    location /api/uploads/ {
        proxy_pass https://n8n-back-crm.h3ag2x.easypanel.host/api/uploads/;
        proxy_http_version 1.1;
        proxy_set_header Host n8n-back-crm.h3ag2x.easypanel.host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # SSL
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        
        # Cache de imagens
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Cache de assets estáticos locais (js, css, etc)
    location ~* \.(js|css|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPA routing - todas as rotas vão para index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
}

# ==========================================
# NOTA IMPORTANTE:
# - O frontend React chama o backend via VITE_API_URL
# - Nginx faz proxy APENAS para /api/uploads/ (imagens)
# - Isso permite que imagens funcionem em qualquer domínio
# ==========================================
